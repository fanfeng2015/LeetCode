package paintHouse;

// LeetCode #256
// There are a row of n houses, each house can be painted with one of the three colors: red, blue or green. 
// The cost of painting each house with a certain color is different. 
// You have to paint all the houses such that no two adjacent houses have the same color.

public class PaintHouse {

	public int minCost(int[][] costs) {
		if (costs == null || costs.length == 0) {
			return 0;
		}
		int n = costs.length;
		int[][] M = new int[n][3];
		M[0] = costs[0];
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < 3; j++) {
				M[i][j] = costs[i][j] + Math.min(M[i - 1][(j + 1) % 3], M[i - 1][(j + 2) % 3]);
			}
		}
		return Math.min(M[n - 1][0], Math.min(M[n - 1][1], M[n - 1][2]));
	}

	// Time complexity is O(n * k).
	// Space complexity is O(n * k).

}
