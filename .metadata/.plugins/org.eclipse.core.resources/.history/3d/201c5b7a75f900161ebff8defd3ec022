package courseSchedule2;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

// LeetCode #210

public class CourseSchedule2 {

	static class TreeNode {
		int key;
		List<TreeNode> children;

		TreeNode(int key) {
			this.key = key;
			this.children = new ArrayList<TreeNode>();
		}
	}

	public int[] findOrder(int numCourses, int[][] prerequisites) {
		int n = prerequisites.length;
		Map<Integer, TreeNode> map = new HashMap<>();
		TreeNode root = new TreeNode(Integer.MIN_VALUE);
		for (int i = 0; i < n; i++) {
			int[] prereq = prerequisites[i];
			int before = prereq[1], after = prereq[0];
			if (!map.containsKey(before)) {
				TreeNode cur = new TreeNode(before);
				TreeNode next = map.containsKey(after) ? map.get(after) : new TreeNode(after);
				cur.children.add(next);
				root.children.add(cur);
			} else {
				
			}
		}
	}

}
