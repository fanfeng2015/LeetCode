package fourSum;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

// LeetCode #18

// Given an array S of n integers, are there elements a, b, c, and d in S 
// such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

// Note: The solution set must not contain duplicate quadruplets.

public class FourSum {

    public List<List<Integer>> fourSum(int[] nums, int target) {
    	List<List<Integer>> result = new ArrayList<List<Integer>>();
    	Arrays.sort(nums);
    	for (int i = 0; i < nums.length; i++) {
    		if (i > 0 && nums[i] == nums[i - 1]) {
    			continue;
    		}
    		List<Integer> cur = new ArrayList<>();
    		cur.add(nums[i]);
    		if (threeSum(nums, target, cur)) {
    			result.add(cur);
    		}
    	}
    	return result;
    }
    
    private boolean threeSum(int[] nums, int taregt, List<Integer> cur) {
    	
    }
	
}
