package uniquePaths2;

// LeetCode #63: follow-up for "Unique Paths":

// Now consider if some obstacles are added to the grids. How many unique paths could there be?
// An obstacle and empty space is marked as 1 and 0 respectively in the grid.

public class UniquePaths2 {

	private int count = 0;

	public int uniquePathsWithObstacles(int[][] obstacleGrid) {
		DFS(obstacleGrid, 0, 0);
		return count;
	}

	private void DFS(int[][] obstacleGrid, int row, int col) {
		// base case
		if (row == obstacleGrid.length - 1 && col == obstacleGrid[0].length) {
			count++;
			return;
		}
		// row < obstacleGrid.length - 1 || col < obstacleGrid[0].length
		if (row < obstacleGrid.length - 1 && obstacleGrid[row + 1][col] != 1) {
			DFS(obstacleGrid, row + 1, col);
		}
		if (col < obstacleGrid[0].length - 1 && obstacleGrid[row][col + 1] != 1) {
			DFS(obstacleGrid, row + 1, col);
		}
	}

}
