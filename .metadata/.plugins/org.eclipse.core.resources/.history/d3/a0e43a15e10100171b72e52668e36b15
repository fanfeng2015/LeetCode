package shortestPalindrome;

// LeetCode #214

// Given a string S, you are allowed to convert it to a palindrome by adding characters in front of it. 
// Find and return the shortest palindrome you can find by performing this transformation.

public class ShortestPalindrome {

	public String shortestPalindrome(String s) {
		String str = s + "#" + new StringBuilder(s).reverse().toString();
		int[] KMP = KMPTable(str);
		return new StringBuilder(s.substring(KMP[KMP.length - 1])).reverse().toString() + s;
	}

	private int[] KMPTable(String str) {
		int[] KMP = new int[str.length()];
		int j = 0;
		for (int i = 1; i < str.length(); i++) {
			if (str.charAt(j) == str.charAt(i)) {
				KMP[i] = KMP[i - 1] + 1;
				j++;
			} else {
				KMP[i] = 0;
			}
		}
		return KMP;
	}

}
