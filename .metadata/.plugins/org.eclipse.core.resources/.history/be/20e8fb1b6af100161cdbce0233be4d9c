package threeSumClosest;

import java.util.Arrays;

// LeetCode #16

// Given an array S of n integers, find three integers in S such that 
// the sum is closest to a given number, target. 
// Return the sum of the three integers. You may assume that each input 
// would have exactly one solution.

public class ThreeSumClosest {

	public int threeSumClosest(int[] nums, int target) {
		Arrays.sort(nums);
		int min = Integer.MAX_VALUE;
	}

	private int twoSumMinDiff(int[] nums, int target, int left, int right) {
		int min = Integer.MAX_VALUE;
		while (left < right) {
			if (nums[left] + nums[right] == target) {
				return 0;
			} else if (nums[left] + nums[right] < target) {
				left++;
				min = Math.min(min, Math.abs(nums[left] + nums[right] - target))
			}
		}
		return min;
	}

}
