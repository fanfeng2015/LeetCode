package triangle;

import java.util.List;

// LeetCode #120

// Given a triangle, find the minimum path sum from top to bottom. 
// Each step you may move to adjacent numbers on the row below.

public class Triangle {

	public int minimumTotal(List<List<Integer>> triangle) {
		int n = triangle.size();
		int[][] M = new int[n][n];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= i; j++) {
				M[i][j] = (j - 1 < 0 ? 0 : M[i - 1][j - 1]) + (j > i - 1 ? 0 : M[i - 1][j]);
			}
		}
	}

}
